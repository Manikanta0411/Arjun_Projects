{"ast":null,"code":"var _jsxFileName = \"/Users/mohanabondada/Downloads/01-starting-project/src/components/Fruits/Fruits.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Button from \"../UI/Button/Button\"; // import styled from \"styled-components\";\n// import Button from \"../../UI/Button/Button\";\n// import styles from \"./CourseInput.module.css\";\n\nimport Apple from \"../../Images/Apple.png\";\nimport { Image } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Fruits = () => {\n  _s();\n\n  let fruitsAndVegetables = [\"Apple\", \"Banana\", \"Grapes\", \"Mango\", \"Orange\", \"Papaya\", \"Watermelon\", \"Guava\", \"PineApple\", \"Onion\", \"Tomato\", \"Potato\", \"Capsicum\", \"Beetroot\", \"Cauliflower\"];\n  let fruitsNames = [\"Apple\", \"Banana\", \"Grapes\", \"Mango\", \"Orange\", \"Papaya\", \"Watermelon\", \"Guava\", \"PineApple\"];\n  let vegetablesNames = [\"Onion\", \"Tomato\", \"Potato\", \"Capsicum\", \"Beetroot\", \"Cauliflower\"];\n  const [photo, setPhoto] = useState(\"Apple\");\n  const [randomIndex, setRandomIndex] = useState();\n  const [imageChange, setImageChange] = useState(false);\n  useEffect(() => {\n    setRandomIndex(Math.floor(Math.random() * 15));\n  }, [imageChange]);\n\n  function randomCard() {\n    let randomIndex = Math.floor(Math.random() * 15);\n    return fruitsAndVegetables[randomIndex];\n  }\n\n  const fruitsButton = () => {\n    setImageChange(imageChange == true ? false : true);\n    setPhoto(fruitsAndVegetables[randomIndex]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Fruits\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn btn-primary\",\n        onClick: fruitsButton,\n        children: \"click me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        width: 200,\n        src: require(`../../Images/${photo}.png`).default,\n        preview: false,\n        height: 200,\n        width: 200\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Fruits, \"w8FhQZpjzLYFCTWNfGVhvGZfNkw=\");\n\n_c = Fruits;\nexport default Fruits; //<div className={`form-control ${!isValid ? \"invalid\" : \"\"}`}>\n//<FormControl className={!isValid && \"invalid\"}>\n//<FormControl invalid={!isValid}>\n\nvar _c;\n\n$RefreshReg$(_c, \"Fruits\");","map":{"version":3,"names":["React","useEffect","useState","Button","Apple","Image","Fruits","fruitsAndVegetables","fruitsNames","vegetablesNames","photo","setPhoto","randomIndex","setRandomIndex","imageChange","setImageChange","Math","floor","random","randomCard","fruitsButton","require","default"],"sources":["/Users/mohanabondada/Downloads/01-starting-project/src/components/Fruits/Fruits.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Button from \"../UI/Button/Button\";\n// import styled from \"styled-components\";\n// import Button from \"../../UI/Button/Button\";\n// import styles from \"./CourseInput.module.css\";\nimport Apple from \"../../Images/Apple.png\";\nimport { Image } from 'antd';\n\nconst Fruits = () => {\n\nlet fruitsAndVegetables = [\"Apple\", \"Banana\", \"Grapes\", \"Mango\", \"Orange\", \"Papaya\", \"Watermelon\", \"Guava\", \"PineApple\", \"Onion\", \"Tomato\", \"Potato\", \"Capsicum\", \"Beetroot\", \"Cauliflower\"];\nlet fruitsNames = [\"Apple\", \"Banana\", \"Grapes\", \"Mango\", \"Orange\", \"Papaya\", \"Watermelon\", \"Guava\", \"PineApple\"];\nlet vegetablesNames = [\"Onion\", \"Tomato\", \"Potato\", \"Capsicum\", \"Beetroot\", \"Cauliflower\"]\nconst [photo, setPhoto] = useState(\"Apple\");\nconst [randomIndex, setRandomIndex] = useState();\nconst [imageChange, setImageChange] = useState(false);\n\nuseEffect(()=>{\n    setRandomIndex(Math.floor(Math.random() * 15));\n}, [imageChange])\n\nfunction randomCard() {\n    let randomIndex = Math.floor(Math.random() * 15);\n      return fruitsAndVegetables[randomIndex];\n  }\n\nconst fruitsButton = ()=>{\n    setImageChange(imageChange == true ? false : true);\n    setPhoto(fruitsAndVegetables[randomIndex])\n}\n\n  return (\n      <div className=\"text\">\n        <div><p><h3>Fruits</h3></p></div>\n    <div className=\"centered\">\n      {/* <img src={Apple} alt=\"Car Image\"></img> */}\n      <button class=\"btn btn-primary\" onClick={fruitsButton}>click me</button>\n      {/* <img src={require(`../../Images/${photo}.png`).default} alt=\"Car Image\" height={100} width={100}></img> */}\n      {/* <Button onClick={fruitsButton()}>Fruits</Button> */}\n      <Image width={200} src={require(`../../Images/${photo}.png`).default} preview={false} height={200} width={200}></Image>\n    </div>\n    </div>\n\n  );\n};\n\nexport default Fruits;\n\n//<div className={`form-control ${!isValid ? \"invalid\" : \"\"}`}>\n//<FormControl className={!isValid && \"invalid\"}>\n//<FormControl invalid={!isValid}>\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,qBAAnB,C,CACA;AACA;AACA;;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,SAASC,KAAT,QAAsB,MAAtB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;EAAA;;EAErB,IAAIC,mBAAmB,GAAG,CAAC,OAAD,EAAU,QAAV,EAAoB,QAApB,EAA8B,OAA9B,EAAuC,QAAvC,EAAiD,QAAjD,EAA2D,YAA3D,EAAyE,OAAzE,EAAkF,WAAlF,EAA+F,OAA/F,EAAwG,QAAxG,EAAkH,QAAlH,EAA4H,UAA5H,EAAwI,UAAxI,EAAoJ,aAApJ,CAA1B;EACA,IAAIC,WAAW,GAAG,CAAC,OAAD,EAAU,QAAV,EAAoB,QAApB,EAA8B,OAA9B,EAAuC,QAAvC,EAAiD,QAAjD,EAA2D,YAA3D,EAAyE,OAAzE,EAAkF,WAAlF,CAAlB;EACA,IAAIC,eAAe,GAAG,CAAC,OAAD,EAAU,QAAV,EAAoB,QAApB,EAA8B,UAA9B,EAA0C,UAA1C,EAAsD,aAAtD,CAAtB;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,OAAD,CAAlC;EACA,MAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,EAA9C;EACA,MAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,KAAD,CAA9C;EAEAD,SAAS,CAAC,MAAI;IACVY,cAAc,CAACG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAD,CAAd;EACH,CAFQ,EAEN,CAACJ,WAAD,CAFM,CAAT;;EAIA,SAASK,UAAT,GAAsB;IAClB,IAAIP,WAAW,GAAGI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAlB;IACE,OAAOX,mBAAmB,CAACK,WAAD,CAA1B;EACH;;EAEH,MAAMQ,YAAY,GAAG,MAAI;IACrBL,cAAc,CAACD,WAAW,IAAI,IAAf,GAAsB,KAAtB,GAA8B,IAA/B,CAAd;IACAH,QAAQ,CAACJ,mBAAmB,CAACK,WAAD,CAApB,CAAR;EACH,CAHD;;EAKE,oBACI;IAAK,SAAS,EAAC,MAAf;IAAA,wBACE;MAAA,uBAAK;QAAA,uBAAG;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAH;QAAA;QAAA;QAAA;MAAA;IAAL;MAAA;MAAA;MAAA;IAAA,QADF,eAEF;MAAK,SAAS,EAAC,UAAf;MAAA,wBAEE;QAAQ,KAAK,EAAC,iBAAd;QAAgC,OAAO,EAAEQ,YAAzC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAKE,QAAC,KAAD;QAAO,KAAK,EAAE,GAAd;QAAmB,GAAG,EAAEC,OAAO,CAAE,gBAAeX,KAAM,MAAvB,CAAP,CAAqCY,OAA7D;QAAsE,OAAO,EAAE,KAA/E;QAAsF,MAAM,EAAE,GAA9F;QAAmG,KAAK,EAAE;MAA1G;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFE;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAaD,CApCD;;GAAMhB,M;;KAAAA,M;AAsCN,eAAeA,MAAf,C,CAEA;AACA;AACA"},"metadata":{},"sourceType":"module"}